# -*- coding: utf-8 -*-
"""egenV1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EjThiYd3FCYC2rtB5LxviOrvw74J37LD
"""
## defining headers
import urllib.request, urllib.parse
from urllib.error import HTTPError,URLError
import pandas as pd
import json
from sqlalchemy import create_engine
#from flask_sqlalchemy import SQLAlchemy
import time
import concurrent.futures

## function for fetching data from the URL
def get_data(url):
  try:
      uh = urllib.request.urlopen(url)
  except HTTPError as e:
      print("Sorry! Could not retrieve anything on {}".format(url))
      return None
  except URLError as e:
      print('Failed to reach a server.')
      print('Reason: ', e.reason)
      return None
  else:
      data = uh.read().decode()
      data = json.loads(data)
      data = data['data']
      return data

## function for creating a dataframe from the data obtained above
def set_data(anylist):
  county = []
  for l in anylist:
    county_dict = {'County':l[9],"Test Date": l[8], "New Positives": l[10], "Cumulative Number of Positives": l[11], "Total Number of Tests Performed": l[12], "Cumulative Number of Tests Performed": l[13]}
    county.append(county_dict)
  df = pd.DataFrame(county).groupby(['County'])
  return df

## function for setting up a ORM wrapper using SQL Alchemy, creating DB and storing data for each county into separate table and table name is County name
def load_database(df):
  engine = create_engine("sqlite:///Egen.db", echo=False)
  for d,df2 in df:
    df2 = df2.reset_index().drop(['index'], axis=1)
    df2.to_sql(d, con=engine, if_exists='replace')
    print(d,"\n",df2.reset_index().drop(['index'], axis=1))

## main function calling the defined functions and flow of the pipeline
def main():
  serviceurl = 'https://health.data.ny.gov/api/views/xdss-u53e/rows.json?accessType=DOWNLOAD'
  County_data = get_data(serviceurl)
  dataframe = set_data(County_data)
  LoadintoSQL = load_database(dataframe)


if __name__=='__main__':
  main()
